
(enum "instruction"
    (constructor "nop")

    (constructor "if-else"
        (arg lang-name: "cond" (int))
        (arg lang-name: "whenTrue" (list "instruction"))
        (arg lang-name: "whenFalse" (list "instruction"))
    )

    (constructor "loop"
        (vararg lang-name: "body" "instruction")
    )

    (constructor "break"
        (kwarg optional: #true "loop-index" (int))
    )

    (constructor "break-if"
        (kwarg optional: #true "loop-index" (int))
        (arg lang-name: "cond" (int))
    )

    (constructor "continue"
        (kwarg optional: #true "loop-index" (int))
    )

    (constructor "continue-if"
        (kwarg optional: #true "loop-index" (int))
        (arg lang-name: "cond" (int))
    )


    (constructor "call-function"
        (arg lang-name: "f" (int))
        (arg lang-name: "r" (int))
        (vararg lang-name: "args" (int))
    )
    (constructor "tuple"
        (arg lang-name: "t" (int))
        (vararg lang-name: "values" (int))
    )
    (constructor "tuple-get"
        (arg lang-name: "r" (int))
        (arg lang-name: "t" (int))
        (arg lang-name: "index" (int))
    )
    (constructor "untuple"
        (arg lang-name: "t" (int))
        (vararg lang-name: "values" (int))
    )
)


(constructor "function-body"
    (vararg lang-name: "instructions" "instruction")
)